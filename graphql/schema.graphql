"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-01-01 13:00:00`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")


#import types/user.graphql
#import types/denomination.graphql
#import types/prizebond.graphql


"Object of inputs with details for ordering columns"
input OrderByClause {
    "Name of field for sorting"
    field: String!
    "Sorting direction"
    order: SortOrder!
}

"Array if order of sorting types"
enum SortOrder {
    ASC
    DESC
}

"Details about current installation"
type Stats {
    users_count: Int!
    groups_count: Int!
    servers_count: Int!
}

type Query {
    "Get single user by unique ID"
    allDraws: [PrizeBondDraw!]! @paginate(defaultCount: 10, maxCount:100, model: "App\\Models\\PrizeBond")
    winnerbond(
        """
        @rules used for the Validation
        """
        bond: Int! @rules(apply: ["size:6"]) @eq
    ): PrizeBondDraw @find(model: "App\\Models\\PrizeBond")
}

extend type Query @middleware(checks: ["auth:api"]) {
    "Get system status for dashboard"
    stats: Stats!
}
