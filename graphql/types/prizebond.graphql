enum position {
    FIRST @enum(value:1)
    SECOND @enum(value:2)
    THIRD @enum(value:3)
}

type PrizeBondDraw {
    id: ID!
    denomination: Denomination! @belongsTo
    bond: Int!
    position: position!
    draw_date: Date!
    created_at: DateTime!
    updated_at: DateTime!
}

type UserPrizeBond {
    id: ID!
    denomination: Denomination! @belongsTo
    bond: Int!
    user: User! @belongsTo
    purchased_at:Date
    purchase_location:String
    created_at: DateTime!
    updated_at: DateTime!
}

input AddPrizeBondInput {
    user_id: Int # For Admin Users Only
    denomination_id: Int! @rules(apply: ["required"])
    bond:Int! @trim @rules(apply: ["required", "size:6"])
    purchase_location: String
    purchased_at: Date
#    purchased
}



#TODO: Mutations
## TODO: 1 - User can add Prizebond against any denomination
## TODO: 2 - User can remove his/her added prizebond

# Queries
extend type Query {
    denominations: [Denomination] @all
}

# Mutations
extend type Mutation {
    addPrizeBond(input: AddPrizeBondInput @spread): UserPrizeBond @create
}
